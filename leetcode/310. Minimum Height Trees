class Solution {
    public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        // if()
        
        List<Integer>[] adjList = new ArrayList[n];
        
       if(n == 1) {
            return Arrays.asList(0);
        } 
        
        int[] degrees = new int[n];
        
        
        for(int index = 0; index < n; index++) {
            adjList[index] = new ArrayList<>();
        }
        for(int[] edge : edges) {
            adjList[edge[0]].add(edge[1]);
            adjList[edge[1]].add(edge[0]);
            degrees[edge[0]]++;
            degrees[edge[1]]++;
        }

         List<Integer> leaves = new ArrayList<>();
        for (int i = 0; i < n; i++)
            if (degrees[i] == 1)
                leaves.add(i);
        
        List<Integer> newLeaves;
        while (n > 2) {
            newLeaves = new ArrayList<>();
            for (int leaf : leaves) {
                for(int adj : adjList[leaf]) {
                    degrees[adj]--;
                    if (degrees[adj] == 1) {
                        newLeaves.add(adj);
                    }
                }
            }
            n -= leaves.size();
            leaves = newLeaves;
        }
        return leaves;
    }
}

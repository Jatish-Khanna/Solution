class RandomizedSet {

    Map<Integer, Integer> map;
    List<Integer> list;
    int last;
    Random random;
    /** Initialize your data structure here. */
    public RandomizedSet() {
        map = new HashMap<>();
        list = new ArrayList<>();
        last = 0;
        random = new Random();
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public boolean insert(int val) {
        if(map.containsKey(val)) {
            return false;
        }
        // insert the element
        map.put(val, last);
        list.add(val);
        last++;
        return true;
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public boolean remove(int val) {
        if(!map.containsKey(val)) {
            return false;
        }
        
        // remove
        int index = map.remove(val);
        last--;
        int lastElement = list.remove(last);
        
        // check if this was the last element no further actions required
        if(last == index) {return true;}
                
        // update mapping
        list.set(index, lastElement);
        map.put(lastElement, index);
        
        return true;
    }
    
    /** Get a random element from the set. */
    public int getRandom() {
        return list.get(random.nextInt(last));
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */

class Solution {
    public int numDecodings(String s) {
      int ans = 0;
      Map<Integer, Integer> cache = new HashMap<>();
      return dfs(0, s.toCharArray(), cache);
    }
    
    private int dfs(int index, char[] s, Map<Integer, Integer> cache) {
        if(index == s.length) { return 1; }
        else if(cache.containsKey(index)) {
            return cache.get(index);
        }
        int ans = 0;
        int num;
        
        if(s[index] != '0') {
            ans += dfs(index+1, s, cache);
            
            if(index < s.length - 1) {
                num =  (s[index] - '0') * 10 + (s[index+1] - '0');
                // System.out.println(num);
                if(num >= 10 && num <= 26) {
                    ans += dfs(index + 2, s, cache);
                }                        
            }
        }
        cache.put(index, ans);
        return ans;
    }
}

class Solution {
    public int minAreaRect(int[][] points) {
        Set<String> map = new HashSet<>();
        
        for(int[] point : points) {
            // map.computeIfAbsent(point[0], k -> new ArrayList<>());
            // map.get(point[0]).add(point[1]);
            map.add(point[0]+","+point[1]);
        }
        
        int minArea = Integer.MAX_VALUE;
        int area;
        String otherCorner1;
        String otherCorner2;
        
        for(int[] p1 : points) {
            for(int[] p2 : points) {
                if(p1[0] > p2[0] && p1[1] > p2[1]) {
                    otherCorner1 = p1[0]+","+p2[1];
                    otherCorner2 = p2[0]+","+p1[1];
                    if(map.contains(otherCorner1) && map.contains(otherCorner2)) {
                        minArea = Math.min(minArea, calculate(p1, p2));
                    }
                }
            }
        }
        return minArea == Integer.MAX_VALUE ? 0 : minArea;
        
    }
    
    private int calculate(int[] p1, int[] p2) {
        return (p1[0] - p2[0]) * (p1[1] - p2[1]);
    }
}

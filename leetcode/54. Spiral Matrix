class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
        int m = matrix.length;;
        if(m == 0) { return list; }
        int n = matrix[0].length;
        int dir = 0;
        int t = 0, b = m - 1, l = 0, r = n - 1;
        
        while(t <= b && l <= r) {
            if(dir == 0) {
            for(int i = l; i <= r; i++) {
                list.add(matrix[t][i]);
            }
            t++;
            }
            
            if(dir == 1) {
            for(int i = t; i <= b; i++) {
                list.add(matrix[i][r]);
            }
            r--;
            }
            
            if(dir == 2){
            for(int i = r; i >= l; i--) {
                list.add(matrix[b][i]);
            }
            b--;
            }
            
            if(dir == 3) {
            for(int i = b; i >= t; i--) {
                list.add(matrix[i][l]);
            }
            l++;
            }
            dir = (dir + 1) % 4;
        }
        return list;
    }
}

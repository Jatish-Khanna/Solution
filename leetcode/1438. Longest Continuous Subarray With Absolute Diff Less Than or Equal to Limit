class Solution {
    public int longestSubarray(int[] nums, int limit) {
        Deque<Integer> max = new ArrayDeque<>();
        Deque<Integer> min = new ArrayDeque<>();
        
        int i = 0;
        int j;
        for(j = 0; j < nums.length; j++) {
            while(!max.isEmpty() && max.peekLast() < nums[j]) max.pollLast();
            while(!min.isEmpty() && min.peekLast() > nums[j]) min.pollLast();
            max.add(nums[j]);
            min.add(nums[j]);
            
            if(max.peek() - min.peek() > limit) {
                if(max.peek() == nums[i]) max.poll();
                if(min.peek() == nums[i]) min.poll();
                i++;
            }
        }
        return j - i;
    }
}

class Solution {
    public int myAtoi(String str) {
        int index = 0;
        char[] arr = str.toCharArray();
        
        char current;
        int sign = 1;
        int number = 0;
        
        if(arr.length <= 0) { return number; }
        
        // start of the number
        while(index < arr.length) {
            
            current = arr[index];
            ++index;
            if(current == ' ') {
                continue;
            } else if(current == '+') {
                sign = 1;
            } else if(current == '-') {
                sign = -1;
            } else if(isDigit(current)) {
                number = current - '0';
            } else {
                return 0;
            }
            
            break;
        }

        int digit;
        while(index < arr.length) {
            current = arr[index];
            if(!isDigit(current)) {
                break;
            }
            digit = arr[index] - '0';
            if(number != 0) {
                if(sign == 1 && (Integer.MAX_VALUE - digit) / number  < 10) {
                    return Integer.MAX_VALUE;
                } else if(sign == -1 && (Integer.MIN_VALUE + digit) / number > -10) {
                    return Integer.MIN_VALUE;
                }
            }
            
            number = number * 10 + digit;
            index++;
        }
        return number * sign;
    }
    
    private boolean isDigit(char current) {
        return current >= '0' && current <= '9';
    }
}

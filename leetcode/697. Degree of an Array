class Solution {
    public int findShortestSubArray(int[] nums) {
        Map<Integer, Integer> firstO = new HashMap<>();
        Map<Integer, Integer> counter = new HashMap<>();
        int current;
        int result = Integer.MAX_VALUE, max = 0;
        
        for(int i = 0; i < nums.length; i++) {
            current = nums[i];
            counter.put(current, counter.getOrDefault(current, 0) + 1);
            if(!firstO.containsKey(current)) {
                firstO.put(current, i);
            }
            
            if(max == counter.get(current)) {
                result = Math.min(result, i - firstO.get(current) + 1); 
            } else if(max < counter.get(current)){
                max = counter.get(current);
                result = i - firstO.get(current) + 1;
            }
        }
        return result;
    }
}

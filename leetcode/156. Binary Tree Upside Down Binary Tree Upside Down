 class Main
{
    
    static class Node {
        int val;
        Node left, right;
        Node(int val) {
            this.val = val;
        }
    }
    
	public static void main(String[] args) {
		Node flipped = upsideDown();
		print(flipped);
	}
	
	static void print(Node node) {
	    if(node == null) {
	        return;
	    }
	    Queue<Node> queue = new LinkedList<>();
	    queue.offer(node);
	    while(!queue.isEmpty()) {
	        int size = queue.size();
	        while(size-- > 0) {
	            Node current = queue.poll();
	            System.out.print(" "+current.val);
	            if(current.left != null) {
	                queue.offer(current.left);
	            }
	            if(current.right != null) {
	                queue.offer(current.right);
	            }
	        }
	        System.out.println();
	    }
	}
	
	private static Node upsideDown() {
	    Node root = new Node(12); 
        root.left = new Node(5); 
        root.left.left = new Node(3); 
        root.left.right = new Node(9); 
        root.right = new Node(1); 
        root.right.left = new Node(1); 
        
        return flip(root);
	}
	
	private static Node flip(Node node) {
	    if(node == null || node.left == null) { return node; }
	    Node left = node.left;
	    Node right = node.right;
	    Node ret = flip(node.left);
	    
	    left.left = right;
	    left.right = node;
	    
	    node.left = null;
	    node.right = null;
	    return ret;
	}
}

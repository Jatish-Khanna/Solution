

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null) { return head; }
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode slow = dummy;
        ListNode fast = head;
        
        while(n-- > 0) {
           fast = fast.next;     
        }
        
        if(fast == null) { return head.next; }
        
        while(fast!=null) {
            slow = slow.next;
            fast = fast.next;
        }
        
        if(slow.next != null)
        {
            slow.next = slow.next.next;
        }
        
        return head;
    }
}
